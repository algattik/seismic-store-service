variables:
  #seismic store service variables
  ENVIRONMENT: cloud
  ISGITLAB: "true"
  PORT: 80
  REPLICA: 1
  UTEST_RUNTIME_IMAGE: seistore-svc-runtime

  #aws variables
  AWS_SERVICE: seismic-store
  AWS_BUILD_SUBDIR: src/cloud/providers/aws/build-aws
  AWS_TEST_SUBDIR: tests
  AWS_ENVIRONMENT: dev
  AWS_BUILDER_DOCKERFILE_PATH: src/cloud/providers/aws/build-aws/builder.Dockerfile
  AWS_RUNTIME_DOCKERFILE_PATH: src/cloud/providers/aws/build-aws/runtime.Dockerfile
  # skipping tests here. Using a local file to run tests
  AWS_SKIP_TESTS: "true"
  #azure variables
  AZURE_SERVICE: seismic-store-service
  #gcp variables
  GCP_APPLICATION_NAME: os-seismic-store-service
  GCP_DEPLOY_FILE: $OSDU_GCP_DEPLOY_FILE
  GCP_PROJECT: opendes-evt
  GCP_SERVICE: seismic-store-service
  GCP_VENDOR: gcp
  #ibm variables
  IBM_OPENSHIFT_PROJECT: og-cicd
  IBM_VENDOR: ibm

  OSDU_GCP_LOG_LEVEL: INFO
  OSDU_GCP_SERVICE: seismic-store
  OSDU_GCP_VENDOR: gcp
  OSDU_GCP_APPLICATION_NAME: seismic-store
  OSDU_GCP_APPLICATION: seismic-store
  OSDU_GCP_ENV_VARS: CLOUDPROVIDER=${OSDU_GCP_CLOUD_PROVIDER},SEISTORE_DES_TARGET_AUDIENCE=${GOOGLE_AUDIENCE},SERVICE_CLOUD_PROJECT=${OSDU_GCP_PROJECT},APP_ENVIRONMENT_IDENTIFIER=${TENANT},IMP_SERVICE_ACCOUNT_SIGNER=${OSDU_GCP_IMP_SERVICE_ACCOUNT_SIGNER},SEISTORE_DES_HOST=${OSDU_GCP_ENTITLEMENTS_URL},SEISTORE_DES_APPKEY=${OSDU_GCP_SEISTORE_DES_APPKEY},DES_REDIS_INSTANCE_ADDRESS=${OSDU_GCP_DES_REDIS_INSTANCE_ADDRESS},DES_REDIS_INSTANCE_PORT=${OSDU_GCP_DES_REDIS_INSTANCE_PORT},LOCKSMAP_REDIS_INSTANCE_ADDRESS=${OSDU_GCP_LOCKSMAP_REDIS_INSTANCE_ADDRESS}  --vpc-connector=$OSDU_GCP_VPC_CONNECTOR

include: 
  # pipeline logic
  - project: "osdu/platform/ci-cd-pipelines"
    ref: 'v0.9.0'
    file: "standard-setup.yml"
  
  # build
  - project: "osdu/platform/ci-cd-pipelines"
    ref: 'v0.9.0'
    file: "build/seismic-store-service.yml"
    
  # scan
  - project: "osdu/platform/ci-cd-pipelines"
    ref: 'v0.9.0'
    file: "scanners/fossa-node.yml"

  # containerize
  - project: "osdu/platform/ci-cd-pipelines"
    ref: 'v0.9.0'
    file: "containerize/seismic-store-service.yml"
    
  # aws
  - project: "osdu/platform/ci-cd-pipelines"
    ref: 'v0.9.0'
    file: "cloud-providers/aws-global.yml"

  - local: "/devops/aws/awstest.yml"

  # deploy
    #azure
  - project: "osdu/platform/ci-cd-pipelines"
    ref: 'v0.9.0'
    file: "cloud-providers/azure-seismic-store-service.yml"
    
    #ibm  
  - project: "osdu/platform/ci-cd-pipelines"
    ref: 'v0.9.0'
    file: "cloud-providers/ibm-seismic-store-service.yml"

    #gcp
  - project: "osdu/platform/ci-cd-pipelines"
    ref: 'v0.9.0'
    file: "cloud-providers/osdu-gcp-cloudrun.yml"

osdu-gcp-test:
  script:
    - echo "Tests not implemented"
  extends:
    - .osdu-gcp-variables
  only:
    variables:
      - $OSDU_GCP == 'true' && $OSDU_GCP_INT_TEST_TYPE != 'python'

osdu-gcp-test-python:
  script:
    - echo "Tests not implemented"
  only:
    variables:
      - $OSDU_GCP == 'true' && $OSDU_GCP_INT_TEST_TYPE == 'python'




