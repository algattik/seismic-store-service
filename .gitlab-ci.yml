variables:
  #seismic store service variables
  ENVIRONMENT: cloud
  ISGITLAB: "true"
  PORT: 80
  REPLICA: 1
  UTEST_RUNTIME_IMAGE: seistore-svc-runtime

  #aws variables
  AWS_SERVICE: seismic-store
  AWS_BUILD_SUBDIR: src/cloud/providers/aws/build-aws
  AWS_TEST_SUBDIR: tests
  AWS_ENVIRONMENT: dev
  AWS_BUILDER_DOCKERFILE_PATH: src/cloud/providers/aws/build-aws/builder.Dockerfile
  AWS_RUNTIME_DOCKERFILE_PATH: src/cloud/providers/aws/build-aws/runtime.Dockerfile
  # skipping tests here. Using a local file to run tests
  AWS_SKIP_TESTS: "true"
  #azure variables
  AZURE_SERVICE: seismic-store-service
  #gcp variables
  GCP_APPLICATION_NAME: os-seismic-store-service
  GCP_DEPLOY_FILE: $OSDU_GCP_DEPLOY_FILE
  GCP_PROJECT: opendes-evt
  GCP_SERVICE: seismic-store-service
  GCP_VENDOR: gcp
  #ibm variables
  IBM_OPENSHIFT_PROJECT: og-cicd
  IBM_VENDOR: ibm

include: 
  # pipeline logic
  - project: "osdu/platform/ci-cd-pipelines"
    ref: "release/0.8"
    file: "standard-setup.yml"
  
  # build
  - project: "osdu/platform/ci-cd-pipelines"
    ref: "release/0.8"
    file: "build/seismic-store-service.yml"
    
  # scan
  - project: "osdu/platform/ci-cd-pipelines"
    ref: "release/0.8"
    file: "scanners/fossa-node.yml"

  # containerize
  - project: "osdu/platform/ci-cd-pipelines"
    ref: "release/0.8"
    file: "containerize/seismic-store-service.yml"
    
  # aws
  - project: "osdu/platform/ci-cd-pipelines"
    ref: "release/0.8"
    file: "cloud-providers/aws.yml"

  - local: "/devops/aws/awstest.yml"

  # deploy
    #azure
  - project: "osdu/platform/ci-cd-pipelines"
    ref: "release/0.8"
    file: "cloud-providers/azure-seismic-store-service.yml"
    
    #ibm  
  - project: "osdu/platform/ci-cd-pipelines"
    ref: "release/0.8"
    file: "cloud-providers/ibm-seismic-store-service.yml"

    #gcp
  - project: "osdu/platform/ci-cd-pipelines"
    ref: "release/0.8"
    file: "cloud-providers/gcp-seismic-store-service.yml"
