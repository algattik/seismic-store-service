.aws_variables:      

  before_script:
    - |
      if [ $AWS_DEPLOY_TARGET == 'EKS' ]; then

        echo "##### DEPLOYING TO EKS/GREEN ######"

        export AWS_INFRA_STACK_NAME="$AWS_GREEN_INFRA_STACK_NAME";
        export AWS_REGION="$AWS_GREEN_REGION";
        export AWS_DOMAIN="${AWS_GREEN_SUBDOMAIN}.${AWS_BASE_DOMAIN}";        
        export RESOURCE_PREFIX="$AWS_GREEN_RESOURCE_PREFIX";        
        
      else

        echo "##### DEPLOYING TO ECS/BLUE ######"

        echo "FAILED>>>BLUE ENVIRONMENT DOES NOT EXIST"

        exit 1
        
        export AWS_INFRA_STACK_NAME="$AWS_BLUE_INFRA_STACK_NAME";
        export AWS_REGION="$AWS_BLUE_REGION";
        export AWS_DOMAIN="${AWS_BLUE_SUBDOMAIN}.${AWS_BASE_DOMAIN}";        
        export RESOURCE_PREFIX="$AWS_BLUE_RESOURCE_PREFIX";        
        
      fi      

      export S3_LEGAL_CONFIG_BUCKET=$(aws ssm get-parameter --name /osdu/${RESOURCE_PREFIX}/shared/legal/s3DataBucket/name --query Parameter.Value  --output text --region $AWS_REGION);            
      export AWS_COGNITO_CLIENT_ID=$(aws ssm get-parameter --name /osdu/${RESOURCE_PREFIX}/cognito-client-id --query Parameter.Value  --output text --region $AWS_REGION);
      export AWS_COGNITO_USER_POOL_ID=$(aws ssm get-parameter --name /osdu/${RESOURCE_PREFIX}/cognito-user-pool-id --query Parameter.Value  --output text --region $AWS_REGION);

      export ELASTIC_HOST=$(aws ssm get-parameter --name /osdu/${RESOURCE_PREFIX}/elasticsearch/end-point --query Parameter.Value  --output text --region $AWS_REGION);
      export ELASTIC_SECRET_STRING=$(aws secretsmanager get-secret-value --secret-id /osdu/${RESOURCE_PREFIX}/elasticsearch/credentials --query SecretString  --output json --region $AWS_REGION | sed -e 's/\\\"/\"/g' -e 's/^.//g' -e 's/.$//g');
      export ELASTIC_USER_NAME=$(echo $ELASTIC_SECRET_STRING | jq -r '.username');
      export ELASTIC_PASSWORD=$(echo $ELASTIC_SECRET_STRING | jq -r '.password');

      export AWS_BASE_URL="https://${AWS_DOMAIN}";
      export HOST_URL="${AWS_BASE_URL}/api/legal/v1/"
      export LEGALTAG_BASE_URL="${AWS_DOMAIN}"
      export STORAGE_URL="${AWS_BASE_URL}/api/storage/v2/"
      export LEGAL_URL="${AWS_BASE_URL}/api/legal/v1/"
      export SEARCH_HOST="${AWS_BASE_URL}/api/search/v2/"
      export STORAGE_HOST="${AWS_BASE_URL}/api/storage/v2/"
      export LEGAL_HOST="${AWS_BASE_URL}/api/legal/v1/"
      export DELIVERY_HOST="${AWS_BASE_URL}/api/delivery/v2/"
      export INDEXER_HOST="${AWS_BASE_URL}/api/indexer/v2/"
      export ENTITLEMENTS_URL="${AWS_BASE_URL}/api/entitlements/v2/"
      export VIRTUAL_SERVICE_HOST_NAME="${AWS_DOMAIN}"
      export HOST="${AWS_BASE_URL}"
      # needs trailing slash
      export PARTITION_BASE_URL="${AWS_BASE_URL}/"
      export WORKFLOW_HOST="${AWS_BASE_URL}/api/workflow/"
      export DATA_WORKFLOW_HOST="${AWS_BASE_URL}/api/data-workflow/v1"
      export REGISTER_CUSTOM_PUSH_URL="${AWS_BASE_URL}/api/register/v1/awstest/aws/challenge"
      export REGISTER_CUSTOM_PUSH_URL1="${AWS_BASE_URL}/api/register/v1/awstest/aws/challenge/1"
      # needs trailing slash
      export REGISTER_BASE_URL="${AWS_BASE_URL}/"
      export REGISTER_CUSTOM_PUSH_URL_HMAC="${AWS_BASE_URL}/api/register/v1/awstest/aws/challenge/1"
      export NOTIFICATION_BASE_URL="${AWS_BASE_URL}/api/notification/v1/"
      export NOTIFICATION_REGISTER_BASE_URL="${AWS_BASE_URL}"
      export FILE_SERVICE_HOST="${AWS_BASE_URL}/api/file/v2"
      export STORAGE_BASE_URL="${AWS_BASE_URL}/api/storage/v2/"
      export DATASET_BASE_URL="${AWS_BASE_URL}/api/dataset/v1/"
      export LEGAL_BASE_URL="${AWS_BASE_URL}/api/legal/v1/"
      export ENTITLEMENTS_BASE_URL="${AWS_BASE_URL}/api/entitlements/v2/"
      export FILEDMS_BASE_URL="${AWS_BASE_URL}/api/dms/file/v1/"
      export SEISMICSTORE_SVC_URL="${AWS_BASE_URL}/api/seismic-store/v3"
      export WELLBORE_DDMS_URL="${AWS_BASE_URL}/api/os-wellbore-ddms"
      export EDSDMS_BASE_URL="${AWS_BASE_URL}/api/dms/eds/v1/"
      export SCHEMA_BASE_URL="${AWS_BASE_URL}/api/schema-service/v1/"
      export ENTITLEMENT_V2_URL="${AWS_BASE_URL}/api/entitlements/v2/"
      export LEGAL_QUEUE="https://sqs.${AWS_REGION}.amazonaws.com/${AWS_ACCOUNT_ID}/${RESOURCE_PREFIX}-legal-queue"

      export AWS_COGNITO_REGION="$AWS_REGION"
      export AWS_S3_ENDPOINT="s3.${AWS_REGION}.amazonaws.com"
      export AWS_S3_REGION="$AWS_REGION"

      export DYNAMO_DB_REGION="$AWS_REGION"
      export DYNAMO_DB_ENDPOINT="dynamodb.${AWS_REGION}.amazonaws.com"
   
      export TABLE_PREFIX="$RESOURCE_PREFIX"
      export AWS_CLUSTER_NAME="${RESOURCE_PREFIX}-core-cluster"

      echo "#### USING OSDU BASE URL: $AWS_BASE_URL ####"

.aws_common_variables:
  variables:
    ACCESS_KEY_ID: $AWS_ACCOUNT_ACCESS_KEY_ID
    SECRET_ACCESS_KEY: $AWS_ACCOUNT_SECRET_ACCESS_KEY
    AWS_ACCESS_KEY_ID: $AWS_ACCOUNT_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_ACCOUNT_SECRET_ACCESS_KEY
    INTEGRATION_TEST_DIR: $AWS_TEST_SUBDIR
    SERVICE_NAME: $AWS_SERVICE
    BUILD_DIR: $AWS_BUILD_SUBDIR
    ENVIRONMENT: $AWS_ENVIRONMENT
    APPLICATION_NAME: os-$AWS_SERVICE
    LOCAL_IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
    AWS_IMAGE_TAG_BASE: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_ECR_REGION}.amazonaws.com/os-${AWS_SERVICE}    
    OTHER_RELEVANT_DATA_COUNTRIES: $AWS_OTHER_RELEVANT_DATA_COUNTRIES
    LEGAL_TAG : $AWS_LEGAL_TAG
    TENANT_NAME : $AWS_TENANT_NAME
    PRIVATE_TENANT1: $AWS_DEFAULT_DATA_PARTITION_ID_TENANT1
    PRIVATE_TENANT2: tenant2
    SHARED_TENANT: $AWS_DEFAULT_DATA_PARTITION_ID_TENANT2
    VENDOR: aws
    DOMAIN: example.com
    AWS_COGNITO_AUTH_FLOW: $AWS_COGNITO_AUTH_FLOW
    AWS_COGNITO_AUTH_PARAMS_PASSWORD: $AWS_COGNITO_AUTH_PARAMS_PASSWORD
    AWS_COGNITO_AUTH_PARAMS_USER: $AWS_COGNITO_AUTH_PARAMS_USER
    AWS_COGNITO_AUTH_PARAMS_USER_NO_ACCESS: $AWS_COGNITO_AUTH_PARAMS_USER_NO_ACCESS    
    AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID
    DEPLOY_ENV: empty    
    MY_TENANT: $AWS_TENANT_NAME
    ENTITLEMENTS_TEST_TENANT: $AWS_ENTITLEMENTS_TEST_TENANT
    LOG_LEVEL: INFO
    SKIP_HTTP_TESTS: 'true'    
    DELIVERY_INT_TEST_BUCKET_NAME: $AWS_DELIVERY_INT_TEST_BUCKET_NAME
    DEFAULT_DATA_PARTITION_ID_TENANT1: $AWS_DEFAULT_DATA_PARTITION_ID_TENANT1
    DEFAULT_DATA_PARTITION_ID_TENANT2: $AWS_DEFAULT_DATA_PARTITION_ID_TENANT2
    #used by file->delivery int tests
    DATA_PARTITION_ID: int-test-file    
    ENTITLEMENTS_DOMAIN: example.com    
    ELASTIC_PORT: 9200    
    TEST_DAG_NAME: my_first_dag    
    SUBSCRIBER_SECRET: $AWS_SUBSCRIBER_SECRET
    HMAC_SECRET: $AWS_HMAC_SECRET    
    PROVIDER_KEY: AWS_S3    
    #File Service Variables
    TIME_ZONE: UTC
    USER_ID: $AWS_COGNITO_AUTH_PARAMS_USER
    #Entitlements V2 variables--start--    
    TENANT: opendes
    SERVICE_PRINCIPAL_EMAIL: serviceprincipal@testing.com
    #Entitlements V2 variables--end--

.aws:
  tags: ['osdu-medium']
  image: $CI_REGISTRY/osdu/platform/deployment-and-operations/base-containers-aws/aws-maven/aws-maven:v1.3
  environment:
    name: AWS
  extends:    
    - .aws_common_variables
    - .aws_variables
  before_script:
    - mkdir -p ~/.aws
    - |
      cat > ~/.aws/credentials <<EOF
      [default]
      aws_access_key_id = $ACCESS_KEY_ID
      aws_secret_access_key = $SECRET_ACCESS_KEY
      EOF