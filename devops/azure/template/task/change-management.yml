parameters:
  createChangeManagement: false
  environment: ""
  providerName: ""
steps:
  - task: Bash@3
    displayName: "Create Change Management Ticket"
    env:
      AZURE_DEVOPS_EXT_PAT: "$(cm_pat)"
      cm_organization_url: "$(cm_organization_url)"
      cm_project: "$(cm_project)"
      cm_owner: "$(cm_owner)"
      cm_area: "$(cm_area)"
      RELEASE_RELEASEWEBURL: "$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/detail?id=$(Build.BuildId)"
    condition: |
      ${{ parameters.createChangeManagement }}
    inputs:
      targetType: "inline"
      script: |
        echo ${AZURE_DEVOPS_EXT_PAT} | az devops login --organization ${cm_organization_url}
        az devops configure --defaults organization=${cm_organization_url}
        az devops configure --defaults project=${cm_project}
        workitem=$(az boards work-item create --title "CM $(Build.DefinitionName) Release-$(Build.BuildNumber)" --type "CHANGE MANAGEMENT" -d "Automated push through Release <br/> " --field "Potential Impact= None" "Risk Description= No risk" "Notifications Required=Notify Delfi Incident Managers " "Evidence=<a href=\"$(printenv RELEASE_RELEASEWEBURL)\">Release pipeline</a>" --query 'id' -o json)
        az boards work-item update --id $workitem --state "Ready for approval" --reason "Approval Required" --assigned-to ${cm_owner} --area "${cm_area}" --field "Scheduled Date=$(date +'%x %r')" "Rollback=Yes" "Security Tested=Yes" "Previous Environment Tested=Yes" "Change Type=Standard Change"