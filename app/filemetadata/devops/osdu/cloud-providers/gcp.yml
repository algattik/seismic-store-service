filemetadata-osdu-gcp-helm-charts-master:
  variables:
    SEISMIC_OSDU_GCP_HELM_CONFIG_DIR: "app/filemetadata/devops/gcp/configmap"
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR: "app/filemetadata/devops/gcp/deploy"
  extends: .osdu-gcp-helm-charts-master

filemetadata-osdu-gcp-helm-charts-release:
  variables:
    SEISMIC_OSDU_GCP_HELM_CONFIG_DIR: "app/filemetadata/devops/gcp/configmap"
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR: "app/filemetadata/devops/gcp/deploy"
  extends: .osdu-gcp-helm-charts-release

filemetadata-osdu-gcp-containerize-gitlab:
  variables:
    SEISMIC_OSDU_GCP_DOCKERFILE_NAME: "Dockerfile"
    SEISMIC_OSDU_GCP_SERVICE: seismic-store-filemetadata
  extends: .osdu-gcp-containerize-gitlab
  before_script:
    - cd app/$FILEMETADATA_SERVICE
    - sed -i "s/SEGY_LIBRARY_PAT/$SEGY_LIBRARY_FEED_PAT/g" pip.conf
  only:
    changes:
      - devops/**/*
      - app/filemetadata/**/*

filemetadata-osdu-gcp-deploy-configmap:
  needs: ["filemetadata-osdu-gcp-containerize-gitlab"]
  variables:
    SEISMIC_OSDU_GCP_HELM_CONFIG_SERVICE: seismic-store-filemetadata-configmap
    SEISMIC_OSDU_GCP_HELM_CONFIG_DIR: "app/filemetadata/devops/gcp/configmap"
    SEISMIC_OSDU_GCP_HELM_CONFIG_SERVICE_VARS: "--set data.domain=$DOMAIN"
  extends: .osdu-gcp-deploy-configmap
  only:
    changes:
      - devops/**/*
      - app/filemetadata/**/*
      
filemetadata-osdu-gcp-dev2-deploy-configmap:
  needs: ["filemetadata-osdu-gcp-containerize-gitlab"]
  variables:
    SEISMIC_OSDU_GCP_HELM_CONFIG_SERVICE: seismic-store-filemetadata-configmap
    SEISMIC_OSDU_GCP_HELM_CONFIG_DIR: "app/filemetadata/devops/gcp/configmap"
    SEISMIC_OSDU_GCP_HELM_CONFIG_SERVICE_VARS: "--set data.domain=$DOMAIN"
  extends: .osdu-gcp-dev2-deploy-configmap
  rules:
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /^release/'
      when: on_success
      changes:
        - devops/**/*
        - app/filemetadata/**/*
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_TAG'
      when: on_success
      changes:
        - devops/**/*
        - app/filemetadata/**/*
    # The variable DEV2="true" should be specified manually in GitLab before running a pipeline to test this job against a protected branch
    - if: '$OSDU_GCP == "true" && $DEV2 == "true"'
      when: on_success
      changes:
        - devops/**/*
        - app/filemetadata/**/*

filemetadata-osdu-gcp-deployment:
  variables:
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_SERVICE: seismic-store-filemetadata-deploy
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR: "app/filemetadata/devops/gcp/deploy"
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_SERVICE_VARS: "--set data.image=$CI_REGISTRY_IMAGE/osdu-gcp-$SEISMIC_OSDU_GCP_SERVICE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    SEISMIC_OSDU_GCP_SERVICE: seismic-store-filemetadata
  extends: .osdu-gcp-deployment
  allow_failure: true
  needs: ["filemetadata-osdu-gcp-containerize-gitlab", "filemetadata-osdu-gcp-deploy-configmap"]
  only:
    changes:
      - devops/**/*
      - app/filemetadata/**/*

filemetadata-osdu-gcp-dev2-deploy-deployment:
  variables:
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_SERVICE: seismic-store-filemetadata-deploy
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR: "app/filemetadata/devops/gcp/deploy"
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_SERVICE_VARS: "--set data.image=$CI_REGISTRY_IMAGE/osdu-gcp-$SEISMIC_OSDU_GCP_SERVICE:$CI_COMMIT_SHORT_SHA"
    SEISMIC_OSDU_GCP_SERVICE: seismic-store-filemetadata
  extends: .osdu-gcp-dev2-deploy-deployment
  needs: ["filemetadata-osdu-gcp-containerize-gitlab", "filemetadata-osdu-gcp-dev2-deploy-configmap"]
  rules:
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /^release/'
      when: on_success
      changes:
        - devops/**/*
        - app/filemetadata/**/*
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_TAG'
      when: on_success
      changes:
        - devops/**/*
        - app/filemetadata/**/*
    # The variable DEV2="true" should be specified manually in GitLab before running a pipeline to test this job against a protected branch
    - if: '$OSDU_GCP == "true" && $DEV2 == "true"'
      when: on_success
      changes:
        - devops/**/*
        - app/filemetadata/**/*