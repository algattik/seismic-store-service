variables:
  GCP_SDMS_PREFIX: /api/seismic-store/v3

sdms-osdu-gcp-helm-charts-master:
  variables:
    SEISMIC_OSDU_GCP_HELM_CONFIG_DIR: "app/sdms/devops/gcp/configmap"
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR: "app/sdms/devops/gcp/deploy"
  extends: .osdu-gcp-helm-charts-master
  before_script:
    - sed -i 's|#{SDMS_PREFIX}#|'$GCP_SDMS_PREFIX'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{SDMS_PREFIX}#|'$GCP_SDMS_PREFIX'|' ${SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR}/values.yaml

sdms-osdu-gcp-helm-charts-release:
  variables:
    SEISMIC_OSDU_GCP_HELM_CONFIG_DIR: "app/sdms/devops/gcp/configmap"
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR: "app/sdms/devops/gcp/deploy"
  extends: .osdu-gcp-helm-charts-release
  before_script:
    - sed -i 's|#{SDMS_PREFIX}#|'$GCP_SDMS_PREFIX'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{SDMS_PREFIX}#|'$GCP_SDMS_PREFIX'|' ${SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR}/values.yaml

sdms-osdu-gcp-containerize-gitlab:
  variables:
    SEISMIC_OSDU_GCP_DOCKERFILE_NAME: "docker/runtime.Dockerfile"
    SEISMIC_OSDU_GCP_SERVICE: seismic-store
    IMAGE_NAME: osdu-gcp-$SEISMIC_OSDU_GCP_SERVICE
  extends: .osdu-gcp-containerize-gitlab
  before_script:
    - cd app/$SDMS_SERVICE
    - sed -i 's|#{SDMS_PREFIX}#|'$GCP_SDMS_PREFIX'|' ./docs/api/openapi.osdu.yaml
  rules:
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /^release/'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_TAG'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*
    - if: '$OSDU_GCP == "true"'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*

sdms-osdu-gcp-deploy-configmap:
  needs: ["sdms-osdu-gcp-containerize-gitlab"]
  variables:
    SEISMIC_OSDU_GCP_HELM_CONFIG_SERVICE: seismic-store-configmap
    SEISMIC_OSDU_GCP_HELM_CONFIG_DIR: "app/sdms/devops/gcp/configmap"
    SEISMIC_OSDU_GCP_HELM_CONFIG_SERVICE_VARS: "--set data.domain=$DOMAIN"
  extends: .osdu-gcp-deploy-configmap
  before_script:
    - sed -i 's|#{SDMS_PREFIX}#|'$GCP_SDMS_PREFIX'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{DES_TARGET_AUDIENCE}#|'$TARGET_AUDIENCE'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{SERVICE_CLOUD_PROJECT}#|'$GCLOUD_PROJECT'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{SERVICE_ACCOUNT_SIGNER}#|'NA'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{DES_APPKEY}#|'NA'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^release/"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: never
    - if: '$OSDU_GCP == "true"'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*
      
sdms-osdu-gcp-dev2-deploy-configmap:
  needs: ["sdms-osdu-gcp-containerize-gitlab"]
  variables:
    SEISMIC_OSDU_GCP_HELM_CONFIG_SERVICE: seismic-store-configmap
    SEISMIC_OSDU_GCP_HELM_CONFIG_DIR: "app/sdms/devops/gcp/configmap"
    SEISMIC_OSDU_GCP_HELM_CONFIG_SERVICE_VARS: "--set data.domain=$DOMAIN"
  extends: .osdu-gcp-dev2-deploy-configmap
  before_script:
    - sed -i 's|#{SDMS_PREFIX}#|'$GCP_SDMS_PREFIX'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{DES_TARGET_AUDIENCE}#|'$TARGET_AUDIENCE'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{SERVICE_CLOUD_PROJECT}#|'$GCLOUD_PROJECT'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{SERVICE_ACCOUNT_SIGNER}#|'NA'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
    - sed -i 's|#{DES_APPKEY}#|'NA'|' ${SEISMIC_OSDU_GCP_HELM_CONFIG_DIR}/values.yaml
  rules:
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /^release/'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_TAG'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*

sdms-osdu-gcp-deployment:
  variables:
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_SERVICE: seismic-store-deploy
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR: "app/sdms/devops/gcp/deploy"
    SEISMIC_OSDU_GCP_SERVICE: seismic-store
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_SERVICE_VARS: "--set data.image=$CI_REGISTRY_IMAGE/osdu-gcp-$SEISMIC_OSDU_GCP_SERVICE --set data.serviceAccountName=$SEISMIC_OSDU_GCP_SERVICE-k8s"
  extends: .osdu-gcp-deployment
  needs: ["sdms-osdu-gcp-containerize-gitlab", "sdms-osdu-gcp-deploy-configmap"]
  before_script:
    - sed -i 's|#{SDMS_PREFIX}#|'$GCP_SDMS_PREFIX'|' ${SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR}/values.yaml
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^release/"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: never
    - if: '$OSDU_GCP == "true"'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*

sdms-osdu-gcp-dev2-deploy-deployment:
  variables:
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_SERVICE: seismic-store-deploy
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR: "app/sdms/devops/gcp/deploy"
    SEISMIC_OSDU_GCP_SERVICE: seismic-store
    SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_SERVICE_VARS: "--set data.image=$CI_REGISTRY_IMAGE/osdu-gcp-$SEISMIC_OSDU_GCP_SERVICE"
  extends: .osdu-gcp-dev2-deploy-deployment
  needs: ["sdms-osdu-gcp-containerize-gitlab", "sdms-osdu-gcp-dev2-deploy-configmap"]
  before_script:
    - sed -i 's|#{SDMS_PREFIX}#|'$GCP_SDMS_PREFIX'|' ${SEISMIC_OSDU_GCP_HELM_DEPLOYMENT_DIR}/values.yaml
  rules:
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /^release/'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_TAG'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*

sdms-osdu-gcp-test-python:
  variables: 
    GOOGLE_CREDENTIALS: $OSDU_GCP_R3_INTEGRATION_TESTER
  extends: .osdu-gcp-test-python
  image: node
  needs: ["sdms-osdu-gcp-deployment"]
  allow_failure: true
  before_script:
    - cd app/$SDMS_SERVICE
  script:
    - apt-get update
    - apt-get install -y python3
    - apt-get install -y python3-pip
    - pip install google
    - pip install google-auth
    - pip install google-api-python-client 
    - pip install google-auth-httplib2 
    - pip install google-auth-oauthlib
    - export OSDU_GCP_AUDIENCE=$INTEGRATION_TEST_AUDIENCE
    - echo $GOOGLE_CREDENTIALS > google_credentials.json
    - export GOOGLE_APPLICATION_CREDENTIALS=google_credentials.json
    - svctoken=$(python3 ${CI_PROJECT_DIR}/devops/scripts/gcp_jwt_client.py)
    - echo $svctoken > /dev/null
    - npm install -g newman
    - chmod +x ./tests/e2e/run_e2e_tests.sh
    - ./tests/e2e/run_e2e_tests.sh --seistore-svc-url="https://${OSDU_GCP_UNIT_HOSTNAME}${GCP_SDMS_PREFIX}" --seistore-svc-api-key="NA" --user-idtoken="$OSDU_GCP_INTEGRATION_TESTER" --tenant="${OSDU_GCP_TENANT}" --admin-email="${OSDU_GCP_SEISTORE_ADMIN_EMAIL}" --datapartition="${DATA_PARTITION_ID}" --legaltag01="${OSDU_GCP_SEISTORE_LEGALTAG01}" --legaltag02="${OSDU_GCP_SEISTORE_LEGALTAG02}" --VCS-Provider="${ISGITLAB}"
  rules:
    - if: "$CI_COMMIT_BRANCH =~ /^release/"
      when: never
    - if: "$CI_COMMIT_TAG"
      when: never
    - if: '$OSDU_GCP == "true"'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*

sdms-osdu-gcp-dev2-test-python:
  variables: 
    GOOGLE_CREDENTIALS: $OSDU_GCP_R3_INTEGRATION_TESTER
  extends: .osdu-gcp-dev2-test-python
  image: node
  needs: ["sdms-osdu-gcp-dev2-deploy-deployment"]
  allow_failure: true
  before_script:
    - cd app/$SDMS_SERVICE
  script:
    - apt-get update
    - apt-get install -y python3
    - apt-get install -y python3-pip
    - pip install google
    - pip install google-auth
    - pip install google-api-python-client 
    - pip install google-auth-httplib2 
    - pip install google-auth-oauthlib
    - export OSDU_GCP_AUDIENCE=$INTEGRATION_TEST_AUDIENCE
    - echo $GOOGLE_CREDENTIALS > google_credentials.json
    - export GOOGLE_APPLICATION_CREDENTIALS=google_credentials.json
    - svctoken=$(python3 ${CI_PROJECT_DIR}/devops/scripts/gcp_jwt_client.py)
    - echo $svctoken > /dev/null
    - npm install -g newman
    - chmod +x ./tests/e2e/run_e2e_tests.sh
    - ./tests/e2e/run_e2e_tests.sh --seistore-svc-url="https://${OSDU_GCP_UNIT_HOSTNAME}${GCP_SDMS_PREFIX}" --seistore-svc-api-key="NA" --user-idtoken="$OSDU_GCP_INTEGRATION_TESTER" --tenant="${OSDU_GCP_TENANT}" --admin-email="${OSDU_GCP_SEISTORE_ADMIN_EMAIL}" --datapartition="${DATA_PARTITION_ID}" --legaltag01="${OSDU_GCP_SEISTORE_LEGALTAG01}" --legaltag02="${OSDU_GCP_SEISTORE_LEGALTAG02}" --VCS-Provider="${ISGITLAB}"
  rules:
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_BRANCH =~ /^release/'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*
    - if: '$OSDU_GCP == "true" && $CI_COMMIT_TAG'
      when: on_success
      changes:
        - devops/**/*
        - app/sdms/**/*
