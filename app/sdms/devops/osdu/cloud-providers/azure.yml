variables:
  #azure variables
  SDMS_AZURE_SERVICE: seismic-store-service
  CHART_PATH: devops/azure/chart
  CLOUD_PROVIDER: azure
  E2E_ADMIN_EMAIL: $AZURE_AD_USER_EMAIL
  E2E_DATA_PARTITION: $TENANT_NAME
  E2E_LEGALTAG01: $LEGAL_TAG
  E2E_LEGALTAG02: opendes-dps-integration-test-valid2-legal-tag
  E2E_TENANT: $TENANT_NAME
  POD_IDENTITY: osdu-identity
  REDIS_INSTANCE_PORT: 6380
  SDMS_MIN_REPLICAS: 1
  SDMS_MAX_REPLICAS: 5
  AZURE_SDMS_PREFIX: /seistore-svc/api/v3
  E2E_SUBPROJECT: demosandbox08
  
sdms_azure_containerize:
  extends: .azure_containerize
  needs: ['sdms_compile-and-unit-test']
  variables:
    SHA_IMAGE: ${SDMS_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}
    LATEST_IMAGE: ${SDMS_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}:latest
    RELEASE_IMAGE: release-${CI_COMMIT_TAG}:${SDMS_PROJECT_NAME}-${CI_COMMIT_TAG}
  script:
    - cd app/$SDMS_SERVICE
    - sed -i 's|#{SDMS_PREFIX}#|'$AZURE_SDMS_PREFIX'|' ./docs/api/openapi.osdu.yaml
    - docker build -t $SDMS_UTEST_RUNTIME_IMAGE --file docker/runtime.Dockerfile .
    # Gitlab Container Registry
    - docker tag $SDMS_UTEST_RUNTIME_IMAGE $CI_REGISTRY_IMAGE/$SHA_IMAGE
    - docker push ${CI_REGISTRY_IMAGE}/$SHA_IMAGE
    - docker tag $CI_REGISTRY_IMAGE/$SHA_IMAGE $CI_REGISTRY_IMAGE/$LATEST_IMAGE
    - docker push ${CI_REGISTRY_IMAGE}/$LATEST_IMAGE
    # Azure Container Registry
    - az acr login -n $AZURE_REGISTRY
    - docker tag $SDMS_UTEST_RUNTIME_IMAGE ${AZURE_REGISTRY}.azurecr.io/$SHA_IMAGE
    - docker push ${AZURE_REGISTRY}.azurecr.io/$SHA_IMAGE
    - docker tag $CI_REGISTRY_IMAGE/$SHA_IMAGE ${AZURE_REGISTRY}.azurecr.io/$LATEST_IMAGE
    - docker push ${AZURE_REGISTRY}.azurecr.io/$LATEST_IMAGE
    - |
      if [ ! -z "$CI_COMMIT_TAG" ]; then
        docker tag $CI_REGISTRY_IMAGE/$SHA_IMAGE ${AZURE_REGISTRY}.azurecr.io/$RELEASE_IMAGE
        docker push ${AZURE_REGISTRY}.azurecr.io/$RELEASE_IMAGE
      fi
  only:
    changes:
      - devops/**/*
      - app/sdms/**/*
    refs:
      - branches
      - main
      - merge_requests
  
sdms_azure_deploy:
  extends: .azure_deploy
  needs: ["sdms_azure_containerize"]
  variables:
    AZURE_KEYVAULT: osdu-svc-properties
    DES_URL: ${AZURE_DNS_NAME}
    IMAGE: ${AZURE_REGISTRY}.azurecr.io/${SDMS_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}
    SDMS_SERVICE_NAME: ${SDMS_AZURE_SERVICE}
    BRANCH: ${CI_COMMIT_REF_SLUG}
    TAG: $CI_COMMIT_SHA
  script:
    # Replace values in config file
    - cd app/$SDMS_SERVICE
    - cp ${CHART_PATH}/helm-config.yaml ${CHART_PATH}/values.yaml
    - sed -i 's,#{CONTAINER_REGISTRY_NAME}#,'$IMAGE',' ${CHART_PATH}/values.yaml
    - sed -i 's,#{DNS_HOST}#,'$DES_URL',' ${CHART_PATH}/values.yaml
    - sed -i 's/#{ENVIRONMENT_NAME}#/'$SDMS_ENVIRONMENT'/' ${CHART_PATH}/values.yaml
    - sed -i 's/#{IMAGE_TAG}#/'$TAG'/' ${CHART_PATH}/values.yaml
    - sed -i 's/#{KEYVAULT_NAME}#/'$AZURE_KEYVAULT'/' ${CHART_PATH}/values.yaml
    - sed -i 's/#{PORT}#/'${SDMS_PORT}'/' ${CHART_PATH}/values.yaml
    - sed -i 's/#{PROVIDER_NAME}#/'$CLOUD_PROVIDER'/' ${CHART_PATH}/values.yaml
    - sed -i 's/#{REDIS_HOST}#/'$REDIS_INSTANCE_ADDRESS'/' ${CHART_PATH}/values.yaml
    - sed -i 's/#{REDIS_PORT}#/'$REDIS_INSTANCE_PORT'/' ${CHART_PATH}/values.yaml
    - sed -i 's/#{REPLICA_COUNT}#/'$SDMS_REPLICA'/' ${CHART_PATH}/values.yaml
    - sed -i 's/#{SDMS_MIN_REPLICAS}#/'$SDMS_MIN_REPLICAS'/' ${CHART_PATH}/values.yaml
    - sed -i 's/#{SDMS_MAX_REPLICAS}#/'$SDMS_MAX_REPLICAS'/' ${CHART_PATH}/values.yaml
    - sed -i 's|#{SDMS_PREFIX}#|'$AZURE_SDMS_PREFIX'|' ${CHART_PATH}/values.yaml
    # Install helm chart
    - helm upgrade $SDMS_SERVICE_NAME ${CHART_PATH} --install --dry-run --values $CHART_PATH/values.yaml 
    - helm upgrade $SDMS_SERVICE_NAME ${CHART_PATH} --install --values $CHART_PATH/values.yaml 
    # Wait for service to be running to start
    - kubectl rollout status deployment.v1.apps/$SDMS_SERVICE_NAME -n osdu --timeout=900s
    - pod=$(kubectl get pod -n osdu|grep $SDMS_PROJECT_NAME |tail -1 |awk '{print $1}')
    - status=$(kubectl wait -n osdu --for=condition=Ready pod/$pod --timeout=600s)
    - if [[ "$status" != *"met"* ]]; then echo "POD didn't start correctly" ; exit 1 ; fi
  only:
    changes:
      - devops/**/*
      - app/sdms/**/*
    refs:
      - branches
      - main
      - merge_requests
      
sdms_azure_test:
  image: node
  extends: .azure_test
  needs: ["sdms_azure_deploy"]
  allow_failure: true
  variables:
    AZURE_AD_APP_RESOURCE_ID: $AZURE_APP_ID
    AZURE_AD_TENANT_ID: $AZURE_TENANT_ID
    AZURE_TESTER_SERVICEPRINCIPAL_SECRET: $AZURE_PRINCIPAL_SECRET
    INTEGRATION_TESTER: $AZURE_PRINCIPAL_ID
  script:
    - cd app/$SDMS_SERVICE
    - echo $svctoken > /dev/null
    - npm install -g newman
    - chmod +x ./tests/e2e/run_e2e_tests.sh
    - ./tests/e2e/run_e2e_tests.sh --seistore-svc-url="https://${AZURE_DNS_NAME}${AZURE_SDMS_PREFIX}" --seistore-svc-api-key="NA" --user-idtoken="$svctoken" --tenant="${E2E_TENANT}" --admin-email="${E2E_ADMIN_EMAIL}" --datapartition="${E2E_DATA_PARTITION}" --legaltag01="${E2E_LEGALTAG01}" --legaltag02="${E2E_LEGALTAG02}" --VCS-Provider="${ISGITLAB}"  --subproject="${E2E_SUBPROJECT}"
  only:
    changes:
      - devops/**/*
      - app/sdms/**/*
    refs:
      - branches
      - main
      - merge_requests
